---
import '@fontsource/rubik';
import '@fontsource/rubik/300.css';
import '@fontsource/rubik/600.css';
import 'modern-normalize';
import '../styles/global.css';

import { SEO } from 'astro-seo';
import * as sanity from '../lib/sanity';
import type { SiteSettings } from '../lib/sanity.gen';
import Header from '../components/header.astro';
import { SpriteProvider } from 'astro-icon';

export interface Props {
  title: string;
}

type SanityData = {
  portrait: sanity.ImageFragment;
  description: SiteSettings['description'];
};

const { title } = Astro.props;

const { description, portrait } = await sanity.client.fetch<SanityData>(/* groq */ `
	{
		'portrait': *[_id == 'me'][0].portrait {
			${sanity.fragments.image}
		},
		'description': *[_id == 'siteSettings'][0].description,
	}
`);

const ogImageUrl = sanity.imageUrl(portrait).width(1200).height(630).url();
---

<!DOCTYPE html>
<html lang="nl">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body>
    <SEO
      description={description ?? ''}
      title={`${title} | Greet Mertens`}
      openGraph={{
        basic: {
          type: 'website',
          title,
          image: ogImageUrl,
        },
        optional: {
          description: description ?? '',
          siteName: 'Greet Mertens',
          locale: 'nl_NL',
        },
        image: {
          url: ogImageUrl,
          width: 1200,
          height: 630,
          alt: 'Greet Mertens',
        },
      }}
    />

    <Header />

    <main class="wrapper">
      <SpriteProvider>
        <slot />
      </SpriteProvider>
    </main>
  </body>
</html>

<style>
  .wrapper {
    padding-bottom: var(--wrapper-padding);
  }
</style>
